/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { NounsSeeder } from "../NounsSeeder";

export class NounsSeeder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NounsSeeder> {
    return super.deploy(overrides || {}) as Promise<NounsSeeder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NounsSeeder {
    return super.attach(address) as NounsSeeder;
  }
  connect(signer: Signer): NounsSeeder__factory {
    return super.connect(signer) as NounsSeeder__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsSeeder {
    return new Contract(address, _abi, signerOrProvider) as NounsSeeder;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nounId",
        type: "uint256",
      },
      {
        internalType: "contract INounsDescriptor",
        name: "descriptor",
        type: "address",
      },
    ],
    name: "generateSeed",
    outputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "artstyle",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "basecolor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "visor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "mathletters",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "flair",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106d1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063422e2e9914610030575b600080fd5b61004361003e3660046105d9565b6100b8565b6040516100af9190600060e08201905065ffffffffffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401528060808501511660808401528060a08501511660a08401528060c08501511660c08401525092915050565b60405180910390f35b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052906100fc600143610622565b604080519140602083015281018590526060016040516020818303038152906040528051906020012060001c905060008373ffffffffffffffffffffffffffffffffffffffff1663cc1ef6b66040518163ffffffff1660e01b815260040160206040518083038186803b15801561017257600080fd5b505afa158015610186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101aa91906105c0565b905060008473ffffffffffffffffffffffffffffffffffffffff16634531c0a86040518163ffffffff1660e01b815260040160206040518083038186803b1580156101f457600080fd5b505afa158015610208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022c91906105c0565b905060008573ffffffffffffffffffffffffffffffffffffffff166390b29dde6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae91906105c0565b905060008673ffffffffffffffffffffffffffffffffffffffff166398af4c036040518163ffffffff1660e01b815260040160206040518083038186803b1580156102f857600080fd5b505afa15801561030c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033091906105c0565b905060008773ffffffffffffffffffffffffffffffffffffffff166344df31d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561037a57600080fd5b505afa15801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b291906105c0565b905060008873ffffffffffffffffffffffffffffffffffffffff16634f2d88c76040518163ffffffff1660e01b815260040160206040518083038186803b1580156103fc57600080fd5b505afa158015610410573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043491906105c0565b905060008973ffffffffffffffffffffffffffffffffffffffff166391434c2c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561047e57600080fd5b505afa158015610492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b691906105c0565b90506040518060e00160405280888a65ffffffffffff166104d79190610660565b65ffffffffffff168152602001878a65ffffffffffff166104f89190610660565b65ffffffffffff1681526020018660308b901c65ffffffffffff1661051d9190610660565b65ffffffffffff1681526020018560608b901c65ffffffffffff166105429190610660565b65ffffffffffff1681526020018460908b901c65ffffffffffff166105679190610660565b65ffffffffffff1681526020018360c08b901c65ffffffffffff1661058c9190610660565b65ffffffffffff1681526020016105a78360f08c901c610660565b65ffffffffffff1690529b9a5050505050505050505050565b6000602082840312156105d257600080fd5b5051919050565b600080604083850312156105ec57600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff8116811461061757600080fd5b809150509250929050565b60008282101561065b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b600082610696577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50069056fea264697066735822122097384bc588bca46d6f992ab323c5dd768ce46186b84bf498f59dfb26995b7c1c64736f6c63430008060033";
