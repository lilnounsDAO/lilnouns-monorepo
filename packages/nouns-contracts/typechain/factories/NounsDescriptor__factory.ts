/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { NounsDescriptor } from "../NounsDescriptor";

export class NounsDescriptor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NounsDescriptor> {
    return super.deploy(overrides || {}) as Promise<NounsDescriptor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NounsDescriptor {
    return super.attach(address) as NounsDescriptor;
  }
  connect(signer: Signer): NounsDescriptor__factory {
    return super.connect(signer) as NounsDescriptor__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsDescriptor {
    return new Contract(address, _abi, signerOrProvider) as NounsDescriptor;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "DataURIToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PartsLocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accessories",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessoriesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_accessory",
        type: "bytes",
      },
    ],
    name: "addAccessory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_artstyle",
        type: "string",
      },
    ],
    name: "addArtStyle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_background",
        type: "bytes",
      },
    ],
    name: "addBackground",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_basecolor",
        type: "bytes",
      },
    ],
    name: "addBaseColor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_flair",
        type: "bytes",
      },
    ],
    name: "addFlair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_mathletters",
        type: "bytes",
      },
    ],
    name: "addMATHletters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_accessories",
        type: "bytes[]",
      },
    ],
    name: "addManyAccessories",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_backgrounds",
        type: "bytes[]",
      },
    ],
    name: "addManyBackgrounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_basecolors",
        type: "bytes[]",
      },
    ],
    name: "addManyBaseColors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_flair",
        type: "bytes[]",
      },
    ],
    name: "addManyFlair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_mathletters",
        type: "bytes[]",
      },
    ],
    name: "addManyMATHletters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_visors",
        type: "bytes[]",
      },
    ],
    name: "addManyVisors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_visor",
        type: "bytes",
      },
    ],
    name: "addVisor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arePartsLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "artStyleCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "artstyles",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "backgrounds",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseColorCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "basecolors",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bytes[]",
            name: "parts",
            type: "bytes[]",
          },
          {
            internalType: "string",
            name: "artstyle",
            type: "string",
          },
        ],
        internalType: "struct NFTDescriptor.TokenURIParams",
        name: "params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "artstyle",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "basecolor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "visor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "mathletters",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "flair",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "constructTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "artstyle",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "basecolor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "visor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "mathletters",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "flair",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "flair",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "flairCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "artstyle",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "basecolor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "visor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "mathletters",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "flair",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "svg",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "artstyle",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "basecolor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "visor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "mathletters",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "flair",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "genericDataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDataURIEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockParts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mathletters",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mathlettersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleDataURIEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "artstyle",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "basecolor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "visor",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "mathletters",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "flair",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "visorCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "visors",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff60a81b1916600160a81b17905534801561002357600080fd5b5061002d33610032565b610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612ebc80620000926000396000f3fe608060405234801561001057600080fd5b50600436106102d35760003560e01c8063773b977111610186578063a0782252116100e3578063e664498211610097578063f063dcdc11610071578063f063dcdc1461059d578063f228ba75146105b0578063f2fde38b146105c357600080fd5b8063e664498214610564578063ee9e4ba114610577578063efd324a91461058a57600080fd5b8063cc1ef6b6116100c8578063cc1ef6b61461052e578063ce2f4f5314610536578063dfe8478b1461055c57600080fd5b8063a078225214610508578063a26fd1861461051b57600080fd5b806391434c2c1161013a57806398af4c031161011f57806398af4c03146104da57806398f0cc36146104e25780639a72ba5f146104f557600080fd5b806391434c2c146104bf57806396d44565146104c757600080fd5b80638c6ab78e1161016b5780638c6ab78e1461047c5780638da5cb5b1461048f57806390b29dde146104b757600080fd5b8063773b9771146104345780637ca942101461046957600080fd5b80632df1b0f8116102345780634f2d88c7116101e8578063631ecabd116101cd578063631ecabd146104115780636c0360eb14610424578063715018a61461042c57600080fd5b80634f2d88c7146103f657806355f804b3146103fe57600080fd5b806344448ac51161021957806344448ac5146103c957806344df31d0146103dc5780634531c0a8146103ee57600080fd5b80632df1b0f8146103a35780633a4d945f146103b657600080fd5b80631e6cf4301161028b578063213319aa11610270578063213319aa14610375578063229e608c146103885780632a1d07691461039b57600080fd5b80631e6cf4301461034f5780631f34a35f1461036257600080fd5b806317b552ab116102bc57806317b552ab1461031657806317cb132c1461032957806318e2018b1461033c57600080fd5b80630475d863146102d857806304bde4dd146102ed575b600080fd5b6102eb6102e636600461223a565b6105d6565b005b6103006102fb366004612471565b61069c565b60405161030d9190612999565b60405180910390f35b6102eb6103243660046122af565b610748565b6102eb61033736600461223a565b6107c9565b61030061034a366004612383565b610885565b6102eb61035d3660046122af565b6108ee565b610300610370366004612471565b61096b565b61030061038336600461248a565b61097b565b6102eb61039636600461223a565b6109e7565b6102eb610aa3565b6103006103b13660046122f1565b610b7e565b6103006103c4366004612471565b610c71565b6102eb6103d73660046122af565b610c81565b6006545b60405190815260200161030d565b6003546103e0565b6007546103e0565b6102eb61040c3660046122af565b610c93565b6102eb61041f36600461223a565b610ce5565b610300610da1565b6102eb610dae565b6000546104599074010000000000000000000000000000000000000000900460ff1681565b604051901515815260200161030d565b610300610477366004612471565b610dc2565b6102eb61048a3660046122af565b610dd2565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161030d565b6004546103e0565b6008546103e0565b6102eb6104d536600461223a565b610e4f565b6005546103e0565b6102eb6104f03660046122af565b610f0b565b610300610503366004612471565b610f88565b610300610516366004612471565b610f98565b6102eb61052936600461223a565b610fa8565b6002546103e0565b600054610459907501000000000000000000000000000000000000000000900460ff1681565b6102eb611064565b610300610572366004612367565b6110ef565b6102eb6105853660046122af565b6111fa565b610300610598366004612471565b611277565b6102eb6105ab3660046122af565b611287565b6103006105be36600461248a565b611304565b6102eb6105d1366004612204565b61136f565b6105de61140c565b60005474010000000000000000000000000000000000000000900460ff161561064e5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b65640000000000000000000000000000000060448201526064015b60405180910390fd5b60005b818110156106975761068583838381811061066e5761066e612c85565b905060200281019061068091906129f9565b611473565b8061068f81612bda565b915050610651565b505050565b600381815481106106ac57600080fd5b9060005260206000200160009150905080546106c790612b86565b80601f01602080910402602001604051908101604052809291908181526020018280546106f390612b86565b80156107405780601f1061071557610100808354040283529160200191610740565b820191906000526020600020905b81548152906001019060200180831161072357829003601f168201915b505050505081565b61075061140c565b60005474010000000000000000000000000000000000000000900460ff16156107bb5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b6107c58282611473565b5050565b6107d161140c565b60005474010000000000000000000000000000000000000000900460ff161561083c5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b60005b818110156106975761087383838381811061085c5761085c612c85565b905060200281019061086e91906129f9565b6114b0565b8061087d81612bda565b91505061083f565b60606000610892836110ef565b84516020808701516040519394506108c5936108b1939286910161268f565b6040516020818303038152906040526114ed565b6040516020016108d59190612954565b6040516020818303038152906040529150505b92915050565b6108f661140c565b60005474010000000000000000000000000000000000000000900460ff16156109615760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b6107c582826116c6565b600581815481106106ac57600080fd5b6060600061098884611703565b905060008160405160200161099d919061279f565b60405160208183030381529060405290506000826040516020016109c191906127e4565b60405160208183030381529060405290506109dd828287610b7e565b9695505050505050565b6109ef61140c565b60005474010000000000000000000000000000000000000000900460ff1615610a5a5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b60005b8181101561069757610a91838383818110610a7a57610a7a612c85565b9050602002810190610a8c91906129f9565b6116c6565b80610a9b81612bda565b915050610a5d565b610aab61140c565b60005474010000000000000000000000000000000000000000900460ff1615610b165760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001781556040517f1680ee6d421f70ed6030d2fc4fcb50217a5dd617858d56562b119eca59172e579190a1565b606060006040518060800160405280868152602001858152602001610ba28561183d565b81526020016002856000015165ffffffffffff1681548110610bc657610bc6612c85565b906000526020600020018054610bdb90612b86565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0790612b86565b8015610c545780601f10610c2957610100808354040283529160200191610c54565b820191906000526020600020905b815481529060010190602001808311610c3757829003601f168201915b50505050508152509050610c688184610885565b95945050505050565b600881815481106106ac57600080fd5b610c8961140c565b6107c58282611d56565b610c9b61140c565b610ca760018383611ee8565b507f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad8282604051610cd99291906129ac565b60405180910390a15050565b610ced61140c565b60005474010000000000000000000000000000000000000000900460ff1615610d585760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b60005b8181101561069757610d8f838383818110610d7857610d78612c85565b9050602002810190610d8a91906129f9565b611d93565b80610d9981612bda565b915050610d5b565b600180546106c790612b86565b610db661140c565b610dc06000611dd0565b565b600781815481106106ac57600080fd5b610dda61140c565b60005474010000000000000000000000000000000000000000900460ff1615610e455760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b6107c58282611e45565b610e5761140c565b60005474010000000000000000000000000000000000000000900460ff1615610ec25760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b60005b8181101561069757610ef9838383818110610ee257610ee2612c85565b9050602002810190610ef491906129f9565b611e82565b80610f0381612bda565b915050610ec5565b610f1361140c565b60005474010000000000000000000000000000000000000000900460ff1615610f7e5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b6107c58282611e82565b600281815481106106ac57600080fd5b600481815481106106ac57600080fd5b610fb061140c565b60005474010000000000000000000000000000000000000000900460ff161561101b5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b60005b818110156106975761105283838381811061103b5761103b612c85565b905060200281019061104d91906129f9565b611e45565b8061105c81612bda565b91505061101e565b61106c61140c565b600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff811675010000000000000000000000000000000000000000009182900460ff1615918202179091556040518181527f360c3d72ee193226275b842f85231c259c934e85459fed80fa68e502ffa9dbde9060200160405180910390a150565b606060006110fc8361183d565b90506111f36040518060c00160405280609b8152602001612ce4609b91396111456111408460008151811061113357611133612c85565b60200260200101516114ed565b611ebf565b61115e6111408560018151811061113357611133612c85565b6111776111408660028151811061113357611133612c85565b6111906111408760038151811061113357611133612c85565b6111a96111408860048151811061113357611133612c85565b6111c26111408960058151811061113357611133612c85565b60405180610100016040528060c88152602001612d7f60c891396040516020016108b1989796959493929190612515565b9392505050565b61120261140c565b60005474010000000000000000000000000000000000000000900460ff161561126d5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b6107c582826114b0565b600681815481106106ac57600080fd5b61128f61140c565b60005474010000000000000000000000000000000000000000900460ff16156112fa5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610645565b6107c58282611d93565b6000546060907501000000000000000000000000000000000000000000900460ff161561133c57611335838361097b565b90506108e8565b600161134784611703565b6040516020016113589291906125ba565b604051602081830303815290604052905092915050565b61137761140c565b73ffffffffffffffffffffffffffffffffffffffff81166114005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610645565b61140981611dd0565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610dc05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610645565b60078054600181018255600091909152610697907fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018383611ee8565b60088054600181018255600091909152610697907ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3018383611ee8565b606081516000141561150d57505060408051602081019091526000815290565b6000604051806060016040528060408152602001612e47604091399050600060038451600261153c9190612ad6565b6115469190612aee565b611551906004612b02565b90506000611560826020612ad6565b67ffffffffffffffff81111561157857611578612cb4565b6040519080825280601f01601f1916602001820160405280156115a2576020820181803683370190505b509050818152600183018586518101602084015b8183101561160e576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f81168501518253506001016115b6565b6003895106600181146116285760028114611672576116b8565b7f3d3d0000000000000000000000000000000000000000000000000000000000007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe8301526116b8565b7f3d000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301525b509398975050505050505050565b60058054600181018255600091909152610697907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018383611ee8565b60608161174357505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561176d578061175781612bda565b91506117669050600a83612aee565b9150611747565b60008167ffffffffffffffff81111561178857611788612cb4565b6040519080825280601f01601f1916602001820160405280156117b2576020820181803683370190505b5090505b8415611835576117c7600183612b3f565b91506117d4600a86612c13565b6117df906030612ad6565b60f81b8183815181106117f4576117f4612c85565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061182e600a86612aee565b94506117b6565b949350505050565b60408051600580825260c0820190925260609160009190816020015b60608152602001906001900390816118595790505090506003836020015165ffffffffffff168154811061188f5761188f612c85565b9060005260206000200180546118a490612b86565b80601f01602080910402602001604051908101604052809291908181526020018280546118d090612b86565b801561191d5780601f106118f25761010080835404028352916020019161191d565b820191906000526020600020905b81548152906001019060200180831161190057829003601f168201915b50505050508160008151811061193557611935612c85565b60200260200101819052506004836040015165ffffffffffff168154811061195f5761195f612c85565b90600052602060002001805461197490612b86565b80601f01602080910402602001604051908101604052809291908181526020018280546119a090612b86565b80156119ed5780601f106119c2576101008083540402835291602001916119ed565b820191906000526020600020905b8154815290600101906020018083116119d057829003601f168201915b505050505081600181518110611a0557611a05612c85565b60200260200101819052506005836060015165ffffffffffff1681548110611a2f57611a2f612c85565b906000526020600020018054611a4490612b86565b80601f0160208091040260200160405190810160405280929190818152602001828054611a7090612b86565b8015611abd5780601f10611a9257610100808354040283529160200191611abd565b820191906000526020600020905b815481529060010190602001808311611aa057829003601f168201915b505050505081600281518110611ad557611ad5612c85565b60200260200101819052506006836080015165ffffffffffff1681548110611aff57611aff612c85565b906000526020600020018054611b1490612b86565b80601f0160208091040260200160405190810160405280929190818152602001828054611b4090612b86565b8015611b8d5780601f10611b6257610100808354040283529160200191611b8d565b820191906000526020600020905b815481529060010190602001808311611b7057829003601f168201915b505050505081600381518110611ba557611ba5612c85565b602002602001018190525060078360a0015165ffffffffffff1681548110611bcf57611bcf612c85565b906000526020600020018054611be490612b86565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1090612b86565b8015611c5d5780601f10611c3257610100808354040283529160200191611c5d565b820191906000526020600020905b815481529060010190602001808311611c4057829003601f168201915b505050505081600481518110611c7557611c75612c85565b602002602001018190525060088360c0015165ffffffffffff1681548110611c9f57611c9f612c85565b906000526020600020018054611cb490612b86565b80601f0160208091040260200160405190810160405280929190818152602001828054611ce090612b86565b8015611d2d5780601f10611d0257610100808354040283529160200191611d2d565b820191906000526020600020905b815481529060010190602001808311611d1057829003601f168201915b505050505081600581518110611d4557611d45612c85565b602090810291909101015292915050565b60028054600181018255600091909152610697907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018383611ee8565b60038054600181018255600091909152610697907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018383611ee8565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60068054600181018255600091909152610697907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018383611ee8565b60048054600181018255600091909152610697907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018383611ee8565b606081604051602001611ed29190612850565b6040516020818303038152906040529050919050565b828054611ef490612b86565b90600052602060002090601f016020900481019282611f165760008555611f7a565b82601f10611f4d578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555611f7a565b82800160010185558215611f7a579182015b82811115611f7a578235825591602001919060010190611f5f565b50611f86929150611f8a565b5090565b5b80821115611f865760008155600101611f8b565b600067ffffffffffffffff831115611fb957611fb9612cb4565b611fea60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612a87565b9050828152838383011115611ffe57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261202657600080fd5b8135602067ffffffffffffffff8083111561204357612043612cb4565b8260051b612052838201612a87565b8481528381019087850183890186018a101561206d57600080fd5b600093505b868410156120c05780358581111561208957600080fd5b8901603f81018b1361209a57600080fd5b6120ab8b8883013560408401611f9f565b84525060019390930192918501918501612072565b5098975050505050505050565b60008083601f8401126120df57600080fd5b50813567ffffffffffffffff8111156120f757600080fd5b60208301915083602082850101111561210f57600080fd5b9250929050565b600082601f83011261212757600080fd5b6111f383833560208501611f9f565b600060e0828403121561214857600080fd5b60405160e0810181811067ffffffffffffffff8211171561216b5761216b612cb4565b60405290508061217a836121e9565b8152612188602084016121e9565b6020820152612199604084016121e9565b60408201526121aa606084016121e9565b60608201526121bb608084016121e9565b60808201526121cc60a084016121e9565b60a08201526121dd60c084016121e9565b60c08201525092915050565b803565ffffffffffff811681146121ff57600080fd5b919050565b60006020828403121561221657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146111f357600080fd5b6000806020838503121561224d57600080fd5b823567ffffffffffffffff8082111561226557600080fd5b818501915085601f83011261227957600080fd5b81358181111561228857600080fd5b8660208260051b850101111561229d57600080fd5b60209290920196919550909350505050565b600080602083850312156122c257600080fd5b823567ffffffffffffffff8111156122d957600080fd5b6122e5858286016120cd565b90969095509350505050565b6000806000610120848603121561230757600080fd5b833567ffffffffffffffff8082111561231f57600080fd5b61232b87838801612116565b9450602086013591508082111561234157600080fd5b5061234e86828701612116565b92505061235e8560408601612136565b90509250925092565b600060e0828403121561237957600080fd5b6111f38383612136565b600080610100838503121561239757600080fd5b823567ffffffffffffffff808211156123af57600080fd5b90840190608082870312156123c357600080fd5b6123cb612a5e565b8235828111156123da57600080fd5b6123e688828601612116565b8252506020830135828111156123fb57600080fd5b61240788828601612116565b60208301525060408301358281111561241f57600080fd5b61242b88828601612015565b60408301525060608301358281111561244357600080fd5b61244f88828601612116565b6060830152508094505050506124688460208501612136565b90509250929050565b60006020828403121561248357600080fd5b5035919050565b600080610100838503121561249e57600080fd5b823591506124688460208501612136565b600081518084526124c7816020860160208601612b56565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000815161250b818560208601612b56565b9290920192915050565b6000895160206125288285838f01612b56565b8a519184019161253b8184848f01612b56565b8a5192019161254d8184848e01612b56565b895192019161255f8184848d01612b56565b88519201916125718184848c01612b56565b87519201916125838184848b01612b56565b86519201916125958184848a01612b56565b85519201916125a78184848901612b56565b919091019b9a5050505050505050505050565b600080845481600182811c9150808316806125d657607f831692505b602080841082141561260f577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b81801561262357600181146126525761267f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952848901965061267f565b60008b81526020902060005b868110156126775781548b82015290850190830161265e565b505084890196505b505050505050610c6881856124f9565b7f7b226e616d65223a2200000000000000000000000000000000000000000000008152600084516126c7816009850160208901612b56565b7f222c20226465736372697074696f6e223a220000000000000000000000000000600991840191820152845161270481601b840160208901612b56565b7f222c2022696d616765223a202200000000000000000000000000000000000000601b92909101918201527f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000060288201528351612768816042840160208801612b56565b7f227d0000000000000000000000000000000000000000000000000000000000006042929091019182015260440195945050505050565b7f4d415448204861742000000000000000000000000000000000000000000000008152600082516127d7816009850160208701612b56565b9190910160090192915050565b7f4d4154482048617420000000000000000000000000000000000000000000000081526000825161281c816009850160208701612b56565b7f2069732061206d656d626572206f6620746865204657445f44414f00000000006009939091019283015250602401919050565b7f3c696d61676520783d22312220793d2231222077696474683d2235303022206881527f65696768743d223530302220696d6167652d72656e646572696e673d2263726960208201527f73702d656467657322207072657365727665417370656374526174696f3d227860408201527f4d6964594d69642220786c696e6b3a687265663d22646174613a696d6167652f60608201527f706e673b6261736536342c00000000000000000000000000000000000000000060808201526000825161292081608b850160208701612b56565b7f222f3e0000000000000000000000000000000000000000000000000000000000608b939091019283015250608e01919050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161298c81601d850160208701612b56565b91909101601d0192915050565b6020815260006111f360208301846124af565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a2e57600080fd5b83018035915067ffffffffffffffff821115612a4957600080fd5b60200191503681900382131561210f57600080fd5b6040516080810167ffffffffffffffff81118282101715612a8157612a81612cb4565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612ace57612ace612cb4565b604052919050565b60008219821115612ae957612ae9612c27565b500190565b600082612afd57612afd612c56565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b3a57612b3a612c27565b500290565b600082821015612b5157612b51612c27565b500390565b60005b83811015612b71578181015183820152602001612b59565b83811115612b80576000848401525b50505050565b600181811c90821680612b9a57607f821691505b60208210811415612bd4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612c0c57612c0c612c27565b5060010190565b600082612c2257612c22612c56565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfe3c7376672069643d22686174222077696474683d223130302522206865696768743d2231303025222076657273696f6e3d22312e31222076696577426f783d2230203020353030203530302220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f313939392f786c696e6b223e3c7374796c653e236861747b73686170652d72656e646572696e673a20637269737065646765733b20696d6167652d72656e646572696e673a202d7765626b69742d63726973702d65646765733b20696d6167652d72656e646572696e673a202d6d6f7a2d63726973702d65646765733b20696d6167652d72656e646572696e673a2063726973702d65646765733b202d6d732d696e746572706f6c6174696f6e2d6d6f64653a206e6561726573742d6e65696768626f723b7d3c2f7374796c653e3c2f7376673e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122033f0214903f858e40ec7d1e50804c3c81d92c18814d4783d95ddb86ab2bbca8e64736f6c63430008060033";
